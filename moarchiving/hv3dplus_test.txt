int main() {
    printf("Test\n");
    // Provided data
    // Provided data
    double points[] = {
        0.16, 0.86, 0.47,
        0.66, 0.37, 0.29,
        0.79, 0.79, 0.04,
        0.28, 0.99, 0.29,
        0.51, 0.37, 0.38,
        0.92, 0.62, 0.07,
        0.16, 0.53, 0.70,
        0.01, 0.98, 0.94,
        0.67, 0.17, 0.54,
        0.79, 0.72, 0.05
    };
    double ref_p[] = {1.0, 1.0, 1.0};
    int naloc = 10; // You need to specify the value of naloc
    int n = 10;     // Number of points
    int d = 3;     // Dimensionality

    // Setup the cdllist
    dlnodeNew_t *head = setup_cdllist(points, naloc, n, d, ref_p);

    // Print out the nodes in the cdllist
    printf("Nodes in the cdllist:\n");
    dlnodeNew_t *current = head->next[d - 1]; // Start from the first node
    int count = 0;
    while (current != head) {
        printf("[%lf, %lf, %lf, %lf]\n", current->x[0], current->x[1], current->x[2], current->x[3]);
        current = current->next[d - 1];
        count++;
    }

    // Compute the hypervolume in 3D
    double hypervolume = hv3dplus(head);

    // Print out the hypervolume
    printf("Hypervolume in 3D: %lf\n", hypervolume);

    // Free dynamically allocated memory
    // You should free all dynamically allocated memory here
    // Freeing the cdllist is not included in this example
    free_cdllist(head);
    return 0;
}